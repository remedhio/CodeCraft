---
import { newtClient } from "../../lib/newt";
import type { Article } from '../../lib/newt'
import '../sass/main.scss'
import Layout from "../../layouts/Layout.astro";
import PageTitle from "../../components/PageTitle.astro";
import BlogPosts from '../../components/BlogPosts.astro'
import Sidebar from "../../components/Sidebar.astro";


export const getStaticPaths = async() => {
  const { items: articles } = await newtClient.getContents<Article>({
    appUid: 'blog',
    modelUid: 'article',
  })
  const uniqueTags = [
    ...new Set(articles.flatMap((article) =>
      article.tags.map((tag: { slug: string }) => tag.slug) // tags.slugを取得
    )),
  ];
  return uniqueTags.map((tagSlug) => {
    const filteredPosts = articles.filter((article) =>
      article.tags.some((t: { slug: string }) => t.slug === tagSlug) // tags.slugでフィルタリング
    );
    return {
      params: { tag: tagSlug }, // パスのパラメータとしてtagSlugを設定
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params; // URLのパラメータからtagを取得
const { posts } = Astro.props; // propsからpostsを取得

---

<Layout title={`タグ: ${tag}`} description={`タグ「${tag}」に関連する記事の一覧です。`}>
  <PageTitle title={`${tag}の記事一覧`}/>
  <div class="home_layout inner">
    <BlogPosts articles={posts} />
    <Sidebar />
  </div>
</Layout>

<style>
  .home_layout {
		display: grid;
		grid-template-columns: 3fr 1fr;
		gap: 40px;
	}
</style>
